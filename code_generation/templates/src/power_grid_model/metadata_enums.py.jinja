# SPDX-FileCopyrightText: Contributors to the Power Grid Model project <powergridmodel@lfenergy.org>
#
# SPDX-License-Identifier: MPL-2.0

"""Data types for power grid model dataset and component types."""

# This file is automatically generated. DO NOT modify it manually!

import sys
from typing import Literal, Union

# To avoid conflicts with src/power_grid_model/enum.py
# pylint: disable=wrong-import-position

sys_path = sys.path.pop(0)
from enum import Enum

# pylint: enable=wrong-import-position

sys.path.append(sys_path)

# Value names are defined in lower case instead of upper case
# pylint: disable=invalid-name


class DataTypes(Enum):
    """Dataset types."""


    {%- for dataset_type in dataset_types %}
    {{ dataset_type }} = "{{ dataset_type }}"
    {%- endfor %}


DataTypesLiteral = Literal[
    {%- for dataset_type in dataset_types %}
    "{{ dataset_type }}",
    {%- endfor %}
]


DataType = Union[DataTypes, DataTypesLiteral]
"""
A DataType is the type of a :class:`BatchDataset`.

- Examples: 

    - DataType.input = "input"
    - DataType.update = "update"
"""


class ComponentTypes(Enum):
    """Grid component types."""


    {%- for component in components %}
    {{ component }} = "{{ component }}"
    {%- endfor %}


ComponentTypesLiteral = Literal[
    {%- for component in components %}
    "{{ component }}",
    {%- endfor %}
]


ComponentType = Union[ComponentTypes, ComponentTypesLiteral]
"""
A ComponentType is the type of a grid component.

- Examples: 

    - ComponentType.node = "node"
    - ComponentType.line = "line"
"""

# pylint: enable=invalid-name